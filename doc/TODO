1) Вкладки для разных файлов
2) Дерево файлов по пути текущего открытого
3) Вкладки в одном окне имеют общую базу (слова, имена переменных, функций и т.д.)
4) Предлогать известные переменные (функции и т.д.) при вводе
5) Если файл уже открыт, то открывать только на чтение
6) Сохранение группы открытых вкладок и системы строк. Сохраняем в специальный файл, который можно открыть и прошлое состояние восстановится.
   Т.е. возможность сохранять и открывать "проект".
Строки.
1) Строки хранятся в двунаправленном списке
2) Для ускорения перехода к строке по номеру, вводятся группы (например по 500 строк)
    2.1) Группа - это указатель на строку, входящую в эту группу и являющейся первой в ней
     Например, есть 2000 строк. 4 группы по 500. Т.е Строка 1 - первая группа, 501 - вторая, 1001 - третья и т.д.
    2.2) Для оптимизации, при поиске строки, использовать начало и конец группы в зависимости от расстояния до искомого номера.
     Например, есть 2000 строк. 4 группы по 500. Для поиска строки 256 обращаемся в первую группу, но так как 256 ближе к 500, и дальше от 1, то поиск начнется от строки 500 в сторону уменьшения (500 -> 256)
    2.3) Деление на группы в зависимости от общего кол-ва строк. Т.е. размер группы будет зависеть от общего кол-ва строк.
     Например, отношения 9999/50, 99999/500, 999999/5000. В данных случаях ускорение будет в 200 раз.
    2.4) Динамическое изменение количества и размеров групп во время редактирования.
Настройки языков программирования.
1) Настройки хранятся в xml.
        <token "имя токена" "опции токена" "формат текста" "цвет текста">
                <word>регулярное выражение, будет идентифицироваться с токеном</word>
                <struct>
                        <open>
                                <word></word>
                        </open>
                        <close>
                                <word></word>
                        </close>
                </struct>
        </token>
2) У каждого токена есть приоритет, при совпадении токенов, выберется тот, что с высшим приоритетом. 
        Если приоритеты равны, выберется последний совпавший.
3) Опции токена:
        3.1) вывод токена в отдельное окно (например для списка функций), нужен id(или имя) окна. Окон может быть сколько угодно.